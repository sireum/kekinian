name: Distro

on:
  push:
  workflow_dispatch:

jobs:

  build-linux-amd64:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum" "$GITHUB_WORKSPACE/Cache"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: Sireum
      - name: Update dev tag
        run: |
          cd "$GITHUB_WORKSPACE/Sireum"
          git push --force origin HEAD:refs/tags/dev
          git fetch --tags
      - name: Setup APE binfmt
        run: |
          sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
          sudo chmod +x /usr/bin/ape
          sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
          sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
      - name: Build Jar & m2
        run: |
          cd "$GITHUB_WORKSPACE/Sireum"
          git submodule update --init --recursive
          cd "$GITHUB_WORKSPACE"
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          export COURSIER_CACHE="$GITHUB_WORKSPACE/Cache"
          rm -fR "$COURSIER_CACHE"
          mkdir -p "$COURSIER_CACHE"
          "$SIREUM_HOME/bin/build.cmd" jar forms
          cp "$SIREUM_HOME/bin/sireum.jar" sireum.jar
          rm -fR "$GITHUB_WORKSPACE/.m2" $HOME/.m2
          "$SIREUM_HOME/bin/build.cmd" m2-lib
          mv $HOME/.m2 "$GITHUB_WORKSPACE/.m2"
          cp -a "$GITHUB_WORKSPACE/Cache/https/jitpack.io"/* "$GITHUB_WORKSPACE/.m2/repository"
          cp -a "$GITHUB_WORKSPACE/Cache/https/repo1.maven.org/maven2"/* "$GITHUB_WORKSPACE/.m2/repository"
          find .m2 -type f ! \( -name '*.pom' -o -name '*.jar' \) -delete
          zip -r org.sireum.library.m2.zip .m2
          rm -fR "$GITHUB_WORKSPACE/.m2" $HOME/.m2
          "$SIREUM_HOME/bin/build.cmd" m2
          mv $HOME/.m2 "$GITHUB_WORKSPACE/.m2"
          cp -a "$GITHUB_WORKSPACE/Cache/https/jitpack.io"/* "$GITHUB_WORKSPACE/.m2/repository"
          cp -a "$GITHUB_WORKSPACE/Cache/https/repo1.maven.org/maven2"/* "$GITHUB_WORKSPACE/.m2/repository"
          find .m2 -type f ! \( -name '*.pom' -o -name '*.jar' \) -delete
          zip -r org.sireum.m2.zip .m2
      - name: Upload install.cmd dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Sireum/bin/install.cmd
          asset_name: install.cmd
          tag: dev
          overwrite: true
      - name: Upload Jar dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum.jar
          asset_name: sireum.jar
          tag: dev
          overwrite: true
      - name: Upload m2 Lib dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.library.m2.zip
          asset_name: org.sireum.library.m2.zip
          tag: dev
          overwrite: true
      - name: Upload m2 dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.m2.zip
          asset_name: org.sireum.m2.zip
          tag: dev
          overwrite: true
      - name: Upload install.cmd Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Sireum/bin/install.cmd
          asset_name: install.cmd
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload Jar Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum.jar
          asset_name: sireum.jar
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload m2 Library Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.library.m2.zip
          asset_name: org.sireum.library.m2.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload m2 Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: org.sireum.m2.zip
          asset_name: org.sireum.m2.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Build
        run: |
          cd "$GITHUB_WORKSPACE"
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          timeout 10s "$SIREUM_HOME/bin/build.cmd" jitpack || true
          "$SIREUM_HOME/bin/sireum" setup vscode --vscode-marketplace --extensions "scala-lang.scala"
          "$SIREUM_HOME/bin/build.cmd" native distro --linux --pack --vscodium
          echo "" >  Sireum/bin/.binfmt
          tar -cJf sireum-cli-linux-amd64.tar.xz \
            Sireum/bin/sireum Sireum/bin/slang-run.sh Sireum/bin/linux/sireum Sireum/bin/install Sireum/bin/7zz \
            Sireum/bin/.binfmt Sireum/bin/.7zz.ver Sireum/license.txt Sireum/readme.md Sireum/versions.properties
          mv "$SIREUM_HOME/distro/linux.tar.xz" sireum-ive-linux-amd64.tar.xz
          mv "$SIREUM_HOME/distro/sireum-codeive-linux-amd64.tar.xz" .
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-linux-amd64.tar.xz
          asset_name: sireum-cli-linux-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-linux-amd64.tar.xz
          asset_name: sireum-ive-linux-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CodeIVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-linux-amd64.tar.xz
          asset_name: sireum-codeive-linux-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-linux-amd64.tar.xz
          asset_name: sireum-cli-linux-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-linux-amd64.tar.xz
          asset_name: sireum-ive-linux-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload CodeIVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-linux-amd64.tar.xz
          asset_name: sireum-codeive-linux-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true

  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum" "$GITHUB_WORKSPACE/Cache"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: Sireum
          submodules: recursive
      - name: Setup APE binfmt
        run: |
          sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
          sudo chmod +x /usr/bin/ape
          sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
          sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
      - name: Build
        run: |
          cd "$GITHUB_WORKSPACE"
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          "$SIREUM_HOME/bin/build.cmd"
          "$SIREUM_HOME/bin/sireum" setup vscode --vscode-marketplace --extensions "scala-lang.scala"
          "$SIREUM_HOME/bin/build.cmd" distro --linux-arm --pack --vscodium
          echo "" >  Sireum/bin/.binfmt
          tar -cJf sireum-cli-linux-arm64.tar.xz \
            Sireum/bin/sireum Sireum/bin/slang-run.sh Sireum/bin/install Sireum/bin/7zz \
            Sireum/bin/.binfmt Sireum/bin/.7zz.ver Sireum/license.txt Sireum/readme.md Sireum/versions.properties
          mv "$SIREUM_HOME/distro/linux-arm.tar.xz" sireum-ive-linux-arm64.tar.xz
          mv "$SIREUM_HOME/distro/sireum-codeive-linux-arm64.tar.xz" .
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-linux-arm64.tar.xz
          asset_name: sireum-cli-linux-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-linux-arm64.tar.xz
          asset_name: sireum-ive-linux-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CodeIVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-linux-arm64.tar.xz
          asset_name: sireum-codeive-linux-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-linux-arm64.tar.xz
          asset_name: sireum-cli-linux-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-linux-arm64.tar.xz
          asset_name: sireum-ive-linux-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload CodeIVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-linux-arm64.tar.xz
          asset_name: sireum-codeive-linux-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true

  build-macos-arm64:
    runs-on: mac-mini-m1
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum" ~/Downloads/sireum
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: Sireum
          submodules: recursive
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          "$SIREUM_HOME/bin/build.cmd"
          "$SIREUM_HOME/bin/sireum" setup vscode --vscode-marketplace --extensions "scala-lang.scala"
          "$SIREUM_HOME/bin/build.cmd" native distro --mac --pack --vscodium
          tar -cJf sireum-cli-mac-arm64.tar.xz \
            Sireum/bin/sireum Sireum/bin/slang-run.sh Sireum/bin/mac/sireum Sireum/bin/install Sireum/bin/7zz \
            Sireum/bin/.7zz.ver Sireum/license.txt Sireum/readme.md Sireum/versions.properties
          mv "$SIREUM_HOME/distro/mac.tar.xz" sireum-ive-mac-arm64.tar.xz
          mv "$SIREUM_HOME/distro/sireum-codeive-mac-arm64.tar.xz" .
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-arm64.tar.xz
          asset_name: sireum-cli-mac-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-arm64.tar.xz
          asset_name: sireum-ive-mac-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CodeIVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-arm64.tar.xz
          asset_name: sireum-codeive-mac-arm64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-arm64.tar.xz
          asset_name: sireum-cli-mac-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-arm64.tar.xz
          asset_name: sireum-ive-mac-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload CodeIVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-arm64.tar.xz
          asset_name: sireum-codeive-mac-arm64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true

  build-macos-amd64:
    runs-on: macOS-13
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Clean
        run: |
          rm -fR "$GITHUB_WORKSPACE/Sireum"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: Sireum
          submodules: recursive
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE
          export SIREUM_HOME="$GITHUB_WORKSPACE/Sireum"
          "$SIREUM_HOME/bin/build.cmd"
          "$SIREUM_HOME/bin/sireum" setup vscode --vscode-marketplace --extensions "scala-lang.scala"
          "$SIREUM_HOME/bin/build.cmd" native distro --mac --pack --vscodium
          tar -cJf sireum-cli-mac-amd64.tar.xz \
            Sireum/bin/sireum Sireum/bin/slang-run.sh Sireum/bin/mac/sireum Sireum/bin/install Sireum/bin/7zz \
            Sireum/bin/.7zz.ver Sireum/license.txt Sireum/readme.md Sireum/versions.properties
          mv "$SIREUM_HOME/distro/mac.tar.xz" sireum-ive-mac-amd64.tar.xz
          mv "$SIREUM_HOME/distro/sireum-codeive-mac-amd64.tar.xz" .
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-amd64.tar.xz
          asset_name: sireum-cli-mac-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-amd64.tar.xz
          asset_name: sireum-ive-mac-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CodeIVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-amd64.tar.xz
          asset_name: sireum-codeive-mac-amd64.tar.xz
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-mac-amd64.tar.xz
          asset_name: sireum-cli-mac-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-mac-amd64.tar.xz
          asset_name: sireum-ive-mac-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload CodeIVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-mac-amd64.tar.xz
          asset_name: sireum-codeive-mac-amd64.tar.xz
          tag: ${{ github.ref }}
          overwrite: true

  build-windows-amd64:
    runs-on: windows-latest
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Enable git config core.longpaths
        run: git config --system core.longpaths true
      - name: Clean
        shell: cmd
        run: |
          if exist "%GITHUB_WORKSPACE%\Sireum" rmdir /s/q "%GITHUB_WORKSPACE%\Sireum"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: Sireum
          submodules: recursive
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.4
        with:
          minimum-size: 8GB
          maximum-size: 16GB
          disk-root: "C:"
      - name: Build
        shell: cmd
        run: |
          set SIREUM_HOME=%GITHUB_WORKSPACE%\Sireum
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set errorlevel=
          call "%SIREUM_HOME%\bin\build.cmd" || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" setup vscode --vscode-marketplace --extensions "scala-lang.scala" || goto :error
          del "%SIREUM_HOME%\bin\.sireum-win.jar" || goto :error
          call "%SIREUM_HOME%\bin\build.cmd" native distro --win --pack --vscodium || goto :error
          copy C:\Windows\System32\vcruntime140.dll Sireum\bin\win\ || goto :error
          copy C:\Windows\System32\vcruntime140_1.dll Sireum\bin\win\ || goto :error
          "%SIREUM_HOME%\bin\7zz.com" a sireum-cli-win-amd64.7z Sireum\bin\sireum.bat Sireum\bin\slang-run.bat Sireum\bin\install Sireum\bin\7zz.com Sireum\bin\.7zz.ver Sireum\bin\win\sireum.exe Sireum\bin\win\vcruntime140.dll Sireum\bin\win\vcruntime140_1.dll Sireum\license.txt Sireum\readme.md Sireum\versions.properties || goto :error
          move "%SIREUM_HOME%\distro\win.7z" "%GITHUB_WORKSPACE%\sireum-ive-win-amd64.7z" || goto :error
          move "%SIREUM_HOME%\distro\sireum-codeive-win-amd64.7z" "%GITHUB_WORKSPACE%\" || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-win-amd64.7z
          asset_name: sireum-cli-win-amd64.7z
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-win-amd64.7z
          asset_name: sireum-ive-win-amd64.7z
          tag: dev
          overwrite: true
      - name: Upload CodeIVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-win-amd64.7z
          asset_name: sireum-codeive-win-amd64.7z
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-win-amd64.7z
          asset_name: sireum-cli-win-amd64.7z
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-win-amd64.7z
          asset_name: sireum-ive-win-amd64.7z
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload CodeIVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-win-amd64.7z
          asset_name: sireum-codeive-win-amd64.7z
          tag: ${{ github.ref }}
          overwrite: true

  build-windows-arm64:
    runs-on: windows-11-arm
    if: "contains(github.event.head_commit.message, '[distro]') || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'"
    steps:
      - name: Enable git config core.longpaths
        run: git config --system core.longpaths true
      - name: Clean
        shell: cmd
        run: |
          if exist "%GITHUB_WORKSPACE%\Sireum" rmdir /s/q "%GITHUB_WORKSPACE%\Sireum"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: Sireum
          submodules: recursive
      - name: Build
        shell: cmd
        run: |
          set SIREUM_HOME=%GITHUB_WORKSPACE%\Sireum
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set errorlevel=
          call "%SIREUM_HOME%\bin\build.cmd" || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" setup vscode --vscode-marketplace --extensions "scala-lang.scala" || goto :error
          del "%SIREUM_HOME%\bin\.sireum-win.jar" || goto :error
          call "%SIREUM_HOME%\bin\build.cmd" distro --win --pack --vscodium || goto :error
          copy C:\Windows\System32\vcruntime140.dll Sireum\bin\win\ || goto :error
          copy C:\Windows\System32\vcruntime140_1.dll Sireum\bin\win\ || goto :error
          "%SIREUM_HOME%\bin\7zz.com" a sireum-cli-win-arm64.7z Sireum\bin\sireum.bat Sireum\bin\slang-run.bat Sireum\bin\install Sireum\bin\7zz.com Sireum\bin\.7zz.ver Sireum\bin\win\vcruntime140.dll Sireum\bin\win\vcruntime140_1.dll Sireum\license.txt Sireum\readme.md Sireum\versions.properties || goto :error
          move "%SIREUM_HOME%\distro\win.7z" "%GITHUB_WORKSPACE%\sireum-ive-win-arm64.7z" || goto :error
          move "%SIREUM_HOME%\distro\sireum-codeive-win-arm64.7z" "%GITHUB_WORKSPACE%\" || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%
      - name: Upload CLI dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-win-arm64.7z
          asset_name: sireum-cli-win-arm64.7z
          tag: dev
          overwrite: true
      - name: Upload IVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-win-arm64.7z
          asset_name: sireum-ive-win-arm64.7z
          tag: dev
          overwrite: true
      - name: Upload CodeIVE dev
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-win-arm64.7z
          asset_name: sireum-codeive-win-arm64.7z
          tag: dev
          overwrite: true
      - name: Upload CLI Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-cli-win-arm64.7z
          asset_name: sireum-cli-win-arm64.7z
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload IVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-ive-win-arm64.7z
          asset_name: sireum-ive-win-arm64.7z
          tag: ${{ github.ref }}
          overwrite: true
      - name: Upload CodeIVE Release
        if: github.ref_type == 'tag'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sireum-codeive-win-arm64.7z
          asset_name: sireum-codeive-win-arm64.7z
          tag: ${{ github.ref }}
          overwrite: true

  test-mac-arm64:
    needs: [build-linux-amd64, build-macos-arm64]
    runs-on: macOS-latest
    steps:
      - name: Test CodeIVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=codeive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek export logika-examples
      - name: Test IVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=ive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples
      - name: Test FMIDE
        run: |
          export SIREUM_HOME=~/Applications/Sireum
          "${SIREUM_HOME}/bin/install/fmide.cmd"

  test-mac-amd64:
    needs: [build-linux-amd64, build-macos-amd64]
    runs-on: macOS-13
    steps:
      - name: Test CodeIVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=codeive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek export logika-examples
      - name: Test IVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=ive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples
      - name: Test FMIDE
        run: |
          export SIREUM_HOME=~/Applications/Sireum
          "${SIREUM_HOME}/bin/install/fmide.cmd"

  test-windows-amd64-2022:
    needs: [build-linux-amd64, build-windows-amd64]
    runs-on: windows-2022
    steps:
      - name: Test CodeIVE
        shell: cmd
        run: |
          rmdir /s/q "%USERPROFILE%\.m2" logika-examples 2> null
          cmd /v/c "set DISTRO=codeive&& curl -JLOs https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd && install.cmd && del /q/f install.cmd"
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" proyek export logika-examples || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%
      - name: Test IVE
        shell: cmd
        run: |
          rmdir /s/q "%USERPROFILE%\.m2" logika-examples 2> null
          cmd /v/c "set DISTRO=ive&& curl -JLOs https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd && install.cmd && del /q/f install.cmd"
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" proyek ive logika-examples || goto :error
          call "%SIREUM_HOME%\bin\install\fmide.cmd" || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%
      - name: Test FMIDE
        shell: cmd
        run: |
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          call "%SIREUM_HOME%\bin\install\fmide.cmd" || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%

  test-windows-amd64-latest:
    needs: [build-linux-amd64, build-windows-amd64]
    runs-on: windows-latest
    steps:
      - name: Test CodeIVE
        shell: cmd
        run: |
          rmdir /s/q "%USERPROFILE%\.m2" logika-examples 2> null
          cmd /v/c "set DISTRO=codeive&& curl -JLOs https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd && install.cmd && del /q/f install.cmd"
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" proyek export logika-examples || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%
      - name: Test IVE
        shell: cmd
        run: |
          rmdir /s/q "%USERPROFILE%\.m2" logika-examples 2> null
          cmd /v/c "set DISTRO=ive&& curl -JLOs https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd && install.cmd && del /q/f install.cmd"
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" proyek ive logika-examples || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%
      - name: Test FMIDE
        shell: cmd
        run: |
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          call "%SIREUM_HOME%\bin\install\fmide.cmd" || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%

  test-windows-arm64-11:
    needs: [build-linux-amd64, build-windows-arm64]
    runs-on: windows-11-arm
    steps:
      - name: Test CodeIVE
        shell: cmd
        run: |
          rmdir /s/q "%USERPROFILE%\.m2" logika-examples 2> null
          cmd /v/c "set DISTRO=codeive&& curl -JLOs https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd && install.cmd && del /q/f install.cmd"
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%
      - name: Test IVE
        shell: cmd
        run: |
          rmdir /s/q "%USERPROFILE%\.m2" logika-examples 2> null
          cmd /v/c "set DISTRO=ive&& curl -JLOs https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd && install.cmd && del /q/f install.cmd"
          set errorlevel=
          set SIREUM_HOME=%USERPROFILE%\Applications\Sireum
          git clone https://github.com/sireum/logika-examples
          call logika-examples\bin\verify.cmd || goto :error
          call "%SIREUM_HOME%\bin\sireum.bat" proyek ive logika-examples || goto :error
          goto :EOF
          :error
          exit /b %errorlevel%

  test-linux-amd64-22-04:
    needs: build-linux-amd64
    runs-on: ubuntu-22.04
    steps:
      - name: Setup APE binfmt
        run: |
          sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
          sudo chmod +x /usr/bin/ape
          sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
          sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
      - name: Test CodeIVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=codeive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek export logika-examples
      - name: Test IVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=ive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples
      - name: Test FMIDE
        run: |
          export SIREUM_HOME=~/Applications/Sireum
          "${SIREUM_HOME}/bin/install/fmide.cmd"

  test-linux-amd64-latest:
    needs: build-linux-amd64
    runs-on: ubuntu-latest
    steps:
      - name: Setup APE binfmt
        run: |
          sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
          sudo chmod +x /usr/bin/ape
          sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
          sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
      - name: Test CodeIVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=codeive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek export logika-examples
      - name: Test IVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=ive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples
      - name: Test FMIDE
        run: |
          export SIREUM_HOME=~/Applications/Sireum
          "${SIREUM_HOME}/bin/install/fmide.cmd"

  test-linux-arm64-24-04:
    needs: [build-linux-amd64, build-linux-arm64]
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Setup APE binfmt
        run: |
          sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
          sudo chmod +x /usr/bin/ape
          sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
          sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register" || true
      - name: Test CodeIVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=codeive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek export logika-examples
      - name: Test IVE
        run: |
          rm -fR ~/.m2 logika-examples
          DISTRO=ive sh -c "$(curl -fsSL https://github.com/sireum/kekinian/releases/download/${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}/install.cmd)"
          export SIREUM_HOME=~/Applications/Sireum
          git clone https://github.com/sireum/logika-examples
          logika-examples/bin/verify.cmd
          "${SIREUM_HOME}/bin/sireum" proyek ive logika-examples
      - name: Test FMIDE
        run: |
          export SIREUM_HOME=~/Applications/Sireum
          "${SIREUM_HOME}/bin/install/fmide.cmd"